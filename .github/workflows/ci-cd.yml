steps:
  - name: Check out repository
    uses: actions/checkout@v2

  - name: Set up OCI CLI
    run: |
      echo "Checking if OCI CLI is available..."
      which oci || { echo "OCI CLI is not available."; exit 1; }

  - name: Debug OCI CLI installation
    run: |
      echo "Listing files in /home/runner/bin:"
      ls -la /home/runner/bin
      echo "Checking OCI binary location:"
      which oci

  - name: Ensure OCI CLI is in PATH
    run: |
      export PATH=$HOME/bin:$PATH
      echo "OCI CLI Path: $PATH"
      which oci

  - name: Delete existing container instance
    run: |
      echo "Verifying OCI CLI before execution..."
      which oci || { echo "OCI CLI is not available."; exit 1; }
      INSTANCE_ID=$(oci container-instances container-instance list --compartment-id $OCI_COMPARTMENT_OCID \
        --display-name "my-container-instance" \
        --query "data[0].id" --raw-output)
      if [ -n "$INSTANCE_ID" ]; then
        echo "Deleting existing container instance with ID: $INSTANCE_ID"
        oci container-instances container-instance delete --container-instance-id "$INSTANCE_ID" --force
      else
        echo "No existing container instance found."
      fi
    shell: /usr/bin/bash -e {0}
    env:
      OCI_CLI_USER: ***
      OCI_CLI_TENANCY: ***
      OCI_CLI_FINGERPRINT: ***
      OCI_CLI_KEY_CONTENT: ***
      OCI_CLI_REGION: ***
      OCI_COMPARTMENT_OCID: ***
      OCIR_REGISTRY: ***
      OCI_AUTH_TOKEN: ***
      GITHUB_TOKEN: ***

  - name: Cleanup
    run: |
      echo "Cleaning up..."
