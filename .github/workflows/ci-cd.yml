name: Build, Push, and Deploy Docker Image with Versioning

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-publish-docker-image:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Oracle Cloud Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.OCIR_REGISTRY }}
          username: ${{ secrets.OCIR_USERNAME }}
          password: ${{ secrets.OCIR_AUTH_TOKEN }}

      - name: Check for Existing Tags
        id: check_tags
        run: |
          # Get existing tags for the image
          TAGS=$(oci ce container-image list --repository-id ${{ secrets.OCIR_REGISTRY }}/${{ secrets.OCI_TENANCY_NAMESPACE }}/${{ secrets.OCIR_REPO_NAME }} --query "data[*].name" --raw-output)
          
          # Check for the latest version tag
          echo "Existing tags: $TAGS"
          LATEST_TAG="v0"
          for TAG in $TAGS; do
            if [[ $TAG =~ v([0-9]+) ]]; then
              VERSION=${BASH_REMATCH[1]}
              if (( VERSION > ${LATEST_TAG:1} )); then
                LATEST_TAG="v$VERSION"
              fi
            fi
          done
          
          # Determine the next version
          NEXT_VERSION=$(( ${LATEST_TAG:1} + 1 ))
          echo "Next version: v$NEXT_VERSION"
          echo "next_version=v$NEXT_VERSION" >> $GITHUB_ENV

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/arm64
          context: .
          file: Dockerfile
          tags: |
            ${{ secrets.OCIR_REGISTRY }}/${{ secrets.OCI_TENANCY_NAMESPACE }}/${{ secrets.OCIR_REPO_NAME }}:latest
            ${{ secrets.OCIR_REGISTRY }}/${{ secrets.OCI_TENANCY_NAMESPACE }}/${{ secrets.OCIR_REPO_NAME }}:${{ env.next_version }}
          push: false
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Push Docker Image to Oracle Cloud Registry
        run: |
          docker push ${{ secrets.OCIR_REGISTRY }}/${{ secrets.OCI_TENANCY_NAMESPACE }}/${{ secrets.OCIR_REPO_NAME }}:latest
          docker push ${{ secrets.OCIR_REGISTRY }}/${{ secrets.OCI_TENANCY_NAMESPACE }}/${{ secrets.OCIR_REPO_NAME }}:${{ env.next_version }}
