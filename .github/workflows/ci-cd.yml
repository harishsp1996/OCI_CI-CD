name: Build and Push Docker Image to OCI

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 3: Build the Docker image
      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build -t ashburn.ocir.io/id2w5ujfrkce/cicd:latest .

      # Step 4: Authenticate with OCI and log in to OCI Container Registry
      - name: Authenticate with OCI and Docker login
        run: |
          echo "Authenticating with OCI..."
          echo "${{ secrets.OCI_PRIVATE_KEY }}" | base64 --decode > oci_private_key.pem

          # Check if the private key was decoded correctly
          if [ ! -s oci_private_key.pem ]; then
            echo "Failed to decode the OCI_PRIVATE_KEY."
            exit 1
          fi

          oci --region ${{ secrets.OCI_REGION }} session authenticate --key-file oci_private_key.pem \
              --tenancy-id ${{ secrets.OCI_TENANCY_OCID }} \
              --user-id ${{ secrets.OCI_USER_OCID }} \
              --fingerprint ${{ secrets.OCI_KEY_FINGERPRINT }}

          echo "Logging in to Docker registry..."
          docker login -u ${{ secrets.OCI_USER_OCID }} -p "$(oci iam auth token create --region ${{ secrets.OCI_REGION }} --user-id ${{ secrets.OCI_USER_OCID }} --description 'GitHub Actions Token' --key-file oci_private_key.pem)" ashburn.ocir.io

      # Step 5: Push the Docker image to OCI Container Registry
      - name: Push Docker image to OCI Container Registry
        run: |
          echo "Pushing Docker image to OCI..."
          docker push ashburn.ocir.io/id2w5ujfrkce/cicd:latest
