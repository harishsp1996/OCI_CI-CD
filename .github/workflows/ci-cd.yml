name: Deploy Container and Check Status

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up OCI CLI
        run: |
          curl -sL https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh | bash
          export PATH=$PATH:/home/ubuntu/.oci-cli/bin
          oci --version

      - name: Set environment variables
        run: |
          echo "OCI_COMPARTMENT_OCID=ocid1.compartment.oc1..aaaaaaaapeqpb7s6neeq7jnlby7ftkcn6se7g6soav5mzjzg2co3foauuctq" >> $GITHUB_ENV
          echo "OCI_CLI_REGION=ap-mumbai-1" >> $GITHUB_ENV
          echo "NEW_VERSION=icsappv1.0.6" >> $GITHUB_ENV
          echo "INSTANCE_NAME=icsapp-instance" >> $GITHUB_ENV

      - name: Create container instance
        run: |
          echo "Creating container instance with version $NEW_VERSION..."
          # Replace with actual OCI container instance creation command
          NEW_INSTANCE=$(oci container-instances container-instance create --compartment-id "$OCI_COMPARTMENT_OCID" --region "$OCI_CLI_REGION" --display-name "icsapp$NEW_VERSION" --image "your-image-ocid" --raw-output | jq -r '.data.id')
          echo "Container instance created: $NEW_INSTANCE"

      - name: Wait for instance lifecycle state to be ACTIVE or FAILED
        run: |
          echo "Waiting for instance $NEW_INSTANCE to reach ACTIVE or FAILED state..."

          while true; do
            # Fetch the lifecycle state of the container instance using jq
            STATUS=$(oci container-instances container-instance list \
              --compartment-id "$OCI_COMPARTMENT_OCID" \
              --region "$OCI_CLI_REGION" \
              --raw-output | jq -r '.data.items[] | select(.["display-name"] == "icsapp'$NEW_VERSION'") | .["lifecycle-state"]')

            echo "Current status: $STATUS"

            if [ "$STATUS" == "ACTIVE" ]; then
              echo "Instance status is ACTIVE."
              break
            elif [ "$STATUS" == "FAILED" ]; then
              echo "Instance creation failed."
              break
            elif [ -z "$STATUS" ]; then
              echo "No status found for instance. Retrying..."
            else
              echo "Instance is still in progress, status: $STATUS"
            fi

            sleep 10
          done

      - name: Send success email
        if: success()
        run: |
          oci ons message publish --topic-id $OCI_NOTIFICATION_TOPIC_OCID \
            --body "{\"status\": \"success\", \"version\": \"$NEW_VERSION\", \"message\": \"Build and deployment successful.\"}"

      - name: Send failure email
        if: failure()
        run: |
          oci ons message publish --topic-id $OCI_NOTIFICATION_TOPIC_OCID \
            --body "{\"status\": \"failure\", \"version\": \"$NEW_VERSION\", \"message\": \"Build failed at step: ${{ job.status }}\"}"
